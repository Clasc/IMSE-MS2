version: "3.6"

services:
  sql:
    image: mysql:5.7
    container_name: sql
    restart: unless-stopped
    environment:
      - MYSQL_HOST_IP=localhost
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=imse_sql_db
    volumes:
      - ./db/volume:/var/lib/mysql
      - ./db/scripts:/docker-entrypoint-initdb.d/:ro
    expose:
      - 3306
    networks: 
      db:

  api:
    #this tells docker where to look for the Dockerfile to build the image
    build: ./Dataservice
    depends_on:
      - sql
    #name of your container and also the DNS name (nginx will proxy pass to this container from localhost:8000 when using a browser or Postman)
    container_name: rest-service
    restart: always
    environment:
      - WEBSITE_INTERFACE=http://web-api:8081
      - MYSQL_HOST_IP=localhost
      - MYSQL_HOST=sql
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
      - MYSQL_DB=imse_sql_db
    links:
      - sql
    #EXPOSE defines the ports reachable from INSIDE your docker network
    expose:
      - 8000
    volumes:
      - ./Dataservice:/app
      - /app/node_modules
    networks:
      api:
      db:

  web-api:
    # this is an interface between the frontend and the api, so the api is not exposed
    build: ./website-interface
    container_name: web-api
    restart: always
    links:
      - api
    environment:
      - WEBSITE_HOST=http://localhost:8001
      - API=http://api:8000
    expose:
      - 8081
    volumes:
      - ./website-interface:/web-api
      - /web-api/node_modules
    networks: 
      api:
      frontend:

  frontend:
    build: ./imse-frontend
    #name of your container and also the DNS name (nginx will proxy pass to this container from localhost:8000 when using a browser or Postman)
    container_name: imse-frontend
    restart: always
    expose:
      - 80
    volumes:
      - ./imse-frontend:/frontend
      - /frontend/node_modules
    networks: 
      frontend:

  nginx:
    build: ./nginx
    container_name: nginx
    restart: always
    ports: 
      - 8081:8081
      - 8001:8001
    networks:
      frontend:

networks: 
  frontend:
  db:  
  api:
